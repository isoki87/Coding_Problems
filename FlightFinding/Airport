package com.leo.flightfinder;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;


public class Airport {
	private String name;
	private Set<String> connections;
	private Map<String, Double> distanceMap, timeMap, priceMap;
	
	Airport(String name){
		this.name = name;
		this.distanceMap = new HashMap<>();
		this.timeMap = new HashMap<>();
		this.priceMap = new HashMap<>();
		this.connections = new HashSet<>();
	}	
	
	@Override
	public boolean equals(Object obj) {
		try {
			if(this.name.equals(((Airport)obj).name)){
				return true;
			}	
		} catch (ClassCastException e) {
			System.out.println("Wrong class casted");
		}
		return false;
	}
	
	@Override
	public int hashCode() {
		return this.name.hashCode();
	}
	
	public String getName() {
		return this.name;
	}
	
	public double getDistanceTo(String name) {
		return distanceMap.get(name);
	}
	
	public double getTimeTo(String name) {
		return timeMap.get(name);
	}
	
	public double getPriceTo(String name) {
		return priceMap.get(name);
	}
	
	public boolean isConnectedTo(Airport airport) {
		return connections.contains(airport.name);
	}
	
	public void updateDestination(String name, double distance, double time, double price) {
		connections.add(name);
		distanceMap.put(name, distance);
		timeMap.put(name, time);
		priceMap.put(name, price);
	}

}
